module With_length : sig
  type 'a t = private
    { global_ tree : 'a (* a *)
    ; global_ length : int
    }
end = struct end

val find_last
  :  'a t
  -> f:
       local_ ('a
               -> bool
                  (* a *)
                  (* b *)
                  (* c *))
  -> 'a option

let find_last
  :  'a t
  -> f:
       local_ ('a
               -> bool
                  (* a *)
                  (* b *))
  -> 'a option
  =
  assert false
;;

type t = local_ string -> local_ string
(* a *)
(* b *)

type global_long_attrs =
  | Foo of
      { global_ s : string
          (* a *)
          (* b *)
          (* c *)
          (* d *)
      ; b : int
      }
  | Bar of global_ string
(* e *)
(* f *)
(* g *)
(* h *)

let local_long_ext =
  (* a *)
  (* b *)
  local_
  (* c *)
  (* d *)
  ()
;;

let () =
  let g = (* a *) local_ (* b *) fun a b c -> 1 in
  ()
;;

let f
  (local_ x
    (* a *)
    (* b *))
  =
  x
;;
